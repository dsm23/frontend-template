name: check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    # container:
    #   image: mcr.microsoft.com/playwright:v1.49.1-jammy
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Use Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: ".bun-version"

      - name: Use cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run Prettier check
        run: bun run fmt.check

      - name: Run lint
        run: bun run lint

      # - name: Run tests
      #   run: bun run test --coverage

      - name: Run build
        run: bun run build
        env:
          RUNTIME_FIREBASE_API_KEY: ${{ secrets.RUNTIME_FIREBASE_API_KEY }}
          RUNTIME_FIREBASE_AUTH_DOMAIN: ${{ secrets.RUNTIME_FIREBASE_AUTH_DOMAIN }}
          RUNTIME_FIREBASE_PROJECT_ID: ${{ secrets.RUNTIME_FIREBASE_PROJECT_ID }}
          RUNTIME_FIREBASE_STORAGE_BUCKET: ${{ secrets.RUNTIME_FIREBASE_STORAGE_BUCKET }}
          RUNTIME_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.RUNTIME_FIREBASE_MESSAGING_SENDER_ID }}
          RUNTIME_FIREBASE_APP_ID: ${{ secrets.RUNTIME_FIREBASE_APP_ID }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2.5.0

      # - name: Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v4.4.0
      #   with:
      #     images: ghcr.io/${{ github.repository }}
      #     tags: |
      #       type=schedule
      #       type=ref,event=branch
      #       type=ref,event=tag
      #       type=ref,event=pr
      #       type=sha,format=long

      # - name: Log in to GitHub container registry
      #   uses: docker/login-action@v2.1.0
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build image to run tests
      #   uses: docker/build-push-action@v4.0.0
      #   with:
      #     context: .
      #     platforms: linux/amd64
      #     push: false
      #     load: true
      #     tags: test

    # - name: Run Playwright tests
    #   run: |
    #     docker run --rm -d --name playwright-tests -p 4000:80 -e MAINSITE_B2C_INSTANCE=${{ vars.MAINSITE_B2C_INSTANCE }} -e MAINSITE_B2C_DOMAIN=${{ vars.MAINSITE_B2C_DOMAIN }} -e MAINSITE_B2C_SIGNUP_SIGNIN_POLICY=${{ vars.MAINSITE_B2C_SIGNUP_SIGNIN_POLICY }} -e MAINSITE_B2C_PASSWORD_RESET_POLICY=${{ vars.MAINSITE_B2C_PASSWORD_RESET_POLICY }} -e MAINSITE_B2C_CLIENT_ID=${{ vars.MAINSITE_B2C_CLIENT_ID }} -e MAINSITE_B2C_API_SCOPE=${{ vars.MAINSITE_B2C_API_SCOPE }} test
    #     bun run playwright test --reporter list
    #     docker stop playwright-tests

    # - name: Build production image and push
    #   uses: docker/build-push-action@v4.0.0
    #   with:
    #     context: .
    #     push: true
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}
